---
import Nav from "../components/Nav.astro";
import Body from "../components/Body.jsx";
import Card from "../components/Card.tsx";
import "../styles/global.css";
import Footer from "../components/Footer.astro";
import Fetch from "../components/Fetch.jsx";


---

<!doctype html>
<html lang="en">
  <head>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500&display=swap"
      rel="stylesheet"
    />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Andrei Ghemusi</title>
    <link rel="icon" type="image/x-icon" href="/favicon.svg" />
  </head><main>
    <Nav />
    <Body />
    <div class="card-container">
      <Card
        client:load
        url="https://github.com/Andrei-Ghemusi/BDD_FashionDays"
        title="Testing using Behave framework"
        tehno="Python, Behave"
        description="This project focuses on conducting functional tests for the FashionDays website using Behave with Python. If you are interested in non-functional tests, please refer to this repository."
      />
      <Card
        url="https://github.com/Andrei-Ghemusi/Python_Basics"
        client:load
        title="Python Basics"
        tehno="Python"
        description="This is a foundational project that serves as an essential stepping stone for my coding journey. This project is meticulously crafted to provide a comprehensive and accessible introduction to the fundamental concepts and principles of Python."
      />
      <Card
        url="https://github.com/Andrei-Ghemusi/Spotify_API_Testing"
        client:load
        title="Spotify API Testing"
        tehno="Python"
        description="I create and execute a suite of Python-based test scripts that interact with Spotify's API. These scripts encompass a range of testing scenarios, including data validation, authentication, and performance testing. My goal is to ensure that the API functions seamlessly, adheres to Spotify's documentation, and meets the high standards of data integrity and security."
      />
      <Card
        url="https://github.com/Andrei-Ghemusi/unittest_project_FashionDays"
        client:load
        title="Testing using Unittest framework"
        tehno="Python, Unittest"
        description="The primary purpose of this project is to conduct a wide range of tests to ensure the robustness and quality of the FashionDays website. These tests include functional tests such as Smoke Testing, Sanity Testing, and Regression Testing, as well as non-functional tests like Performance Testing, Accessibility Testing, and SEO Testing."
      />
    </div>
    <Fetch client:load />
    <Footer />
  </main>

  <style>
    * {
      font-family: "Inter", sans-serif;
    }

    main {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
  </style>

  <script is:inline>
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");

      const otherElement = document.getElementById("myElement");
      otherElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const myElement = document.getElementById("myElement");
      myElement.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document
      .getElementById("themeToggle")
      .addEventListener("click", handleToggleClick);
  </script>

</html>
