---
import Nav from "../components/Nav.astro";
import Body from "../components/Body.jsx";
import Card from "../components/Card.tsx";
import "../styles/global.css"
import Footer from "../components/Footer.astro"
---
<!DOCTYPE html>
<html lang="en">
<head>
	<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500&display=swap" rel="stylesheet">
<meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Andrei Ghemusi</title>
	<link rel="icon" type="image/x-icon" href="/favicon.svg">



	<main>
	<Nav />
	<Body />
	<div class= card-container>
	<Card client:load title="Fashion Days"
	tehno="Python, Behave"
	description = "This project focuses on conducting functional tests for the FashionDays website using Behave with Python. If you are interested in non-functional tests, please refer to this repository."/>
	<Card client:load title="Python Basics"
	tehno="Python"
	description = "This project focuses on conducting functional tests for the FashionDays website using Behave with Python. If you are interested in non-functional tests, please refer to this repository."/>
	<Card client:load title="Python Basics"
	tehno="Python"
	description = "This project focuses on conducting functional tests for the FashionDays website using Behave with Python. If you are interested in non-functional tests, please refer to this repository."/>
	<Card client:load title="Fashion Days"
	tehno="Python, Behave"
	description = "This project focuses on conducting functional tests for the FashionDays website using Behave with Python. If you are interested in non-functional tests, please refer to this repository."/>
	
</div>
<Footer />
</main>


<style>
	*{
		font-family: 'Inter', sans-serif;
	}

	main{
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	
</style>


<script is:inline>
	const theme = (() => {
	  if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
		return localStorage.getItem('theme');
	  }
	  if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
		return 'dark';
	  }
	  return 'light';
	})();
  
	if (theme === 'light') {
	  document.documentElement.classList.remove('dark');
	} else {
	  document.documentElement.classList.add('dark');
  
	  const otherElement = document.getElementById('myElement');
	  otherElement.classList.add('dark');
	}
  
	window.localStorage.setItem('theme', theme);
  
	const handleToggleClick = () => {
	  const element = document.documentElement;
	  element.classList.toggle("dark");
  
	  const myElement = document.getElementById('myElement');
	  myElement.classList.toggle("dark");
  
	  const isDark = element.classList.contains("dark");
	  localStorage.setItem("theme", isDark ? "dark" : "light");
	}
  
	document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
  </script>